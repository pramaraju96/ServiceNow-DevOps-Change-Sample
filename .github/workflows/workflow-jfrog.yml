# This workflow uses ServiceNow custom actions that are certified by ServiceNow.
name: GitHub workflow with JFrog
on: workflow_dispatch
# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
#     types: [opened, synchronize, reopened]

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package

  publish:
    name: 'Publish to JFrog Artifactory'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        with:
          version: latest
        env:
          JF_URL: ${{ secrets.JFROG_URL }}
          JF_USER: ${{ secrets.JFROG_USERNAME }}
          JF_PASSWORD: ${{ secrets.JFROG_PASSWORD }}

      - name: Push to Artifactory and Scan Image
        # env:
        #   DOCKER_IMAGE: ${{ matrix.environment.artifactory_url }}/nordlb-cloud-docker-dev/${{ github.repository }}:${{ github.event.release.tag_name }}
        run: |
          export JFROG_CLI_NAME="${{ github.workspace }}"
          jfrog rt dp rama-build-name 1 --target-repo=felipe-repo

          # echo "Push Image"
          # jfrog rt dp ${{ env.DOCKER_IMAGE }} ${{ env.ARTIFACTORY_REPOSITORY_DEV }}
          # echo "Collecting Information from Git"
          # jfrog rt bag
          # echo "Collecting Environment Variables of the Build"
          # jfrog rt bce
          # echo "Publish Build Information to Artifactory"
          # jfrog rt bp
            
  change:
    # jobs that must complete successfully before this job will run
    needs: publish
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change Automation'
    outputs:
      changeRequestNumber: ${{ steps.create_change.outputs.change-request-number }}
      changeRequestSysId: ${{ steps.create_change.outputs.change-request-sys-id }}
    steps:
      - name: ServiceNow Change
        id: create_change
        uses: ServiceNow/servicenow-devops-change@v4.1.0
        with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # GitHub Context
          context-github: ${{ toJSON(github) }}
          # Display Name of the Job
          job-name: 'ServiceNow DevOps Change Automation'
          change-request: '{"setCloseCode": "true","autoCloseChange": true,"attributes": {"short_description": "GitHub - (load-testing)","description": "GitHub Automated Software Deployment.","assignment_group": "1b0a5c60ff8c9610c648fe258c4fd956","assigned_to" :{"name": "Abraham Lincoln"},"work_notes": "Check out this awesome CR","cmdb_ci": "5f5c4854c0a8010e00c202b418f5b73b","implementation_plan": "Software update is tested and results can befound in Test Summaries Tab","backout_plan": "When software fails in production, the previous software release will be re-deployed.","test_plan": "Testing if the software was successfully deployed", "template":"47de5ca8ff8c9610c648fe258c4fd96b"}}'
          #change-request: '{"attributes":{"type":"normal"}}'
          # You can specify the requested_by attribute either with name or sys_id. Example: "requested_by":{"name": "Test User"} or "requested_by": "62826bf03710200044e0bfc8bcbe5df1"
          # You can specify the assignment_group attribute either with name or sys_id. Example: "assignment_group":{"name": "Change Approval Team"} or "assignment_group": "5f721d93c0a8010e015533746de18bf9"
          # start_date: Enter the planned start date
          # end_date: Enter the planned end date
          #deployment-gate: '{"environment":"env_deployment_gates","jobName":"ServiceNow DevOps Get Change"}'
          abortOnChangeCreationFailure: false
          interval: 100
      - name: Output of ServiceNow DevOps Change Automation
        run: |
          echo 'Output of ServiceNow DevOps Change Automation is change-request-number = ${{ steps.create_change.outputs.change-request-number }}' >> $GITHUB_OUTPUT
          echo 'Output of ServiceNow DevOps Change Automation is change-request-sys-id = ${{ steps.create_change.outputs.change-request-sys-id }}' >> $GITHUB_OUTPUT            

