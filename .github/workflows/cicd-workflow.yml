# This workflow uses ServiceNow custom actions that are certified by ServiceNow.
name: CICD GitHub workflow
on: workflow_dispatch
# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
#     types: [opened, synchronize, reopened]

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean compile

  test:
    name: 'Test'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.0.0
    - name: Set Timezone
      # You may pin to the exact commit or the version.
      # uses: szenius/set-timezone@ce9c440bc3af4f51b28d7ef7e5c47ee8f26c8dcb
      uses: szenius/set-timezone@v1.2
      with:
        # Desired timezone for MacOS
        timezoneMacos: "Asia/Singapore"
    - name: Run Tests with Maven
      run: mvn -B test --file pom.xml
    # - name: ServiceNow DevOps Unit Test Results
    # # You may pin to the exact commit or the version.
    #   uses: ServiceNow/servicenow-devops-test-report@v3.1.0
    #   with:
    #       # Devops Integration Token
    #       devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
    #       # ServiceNow Instance Name
    #       instance-url: ${{ secrets.SN_INSTANCE_URL }}
    #       # Orchestration Tool Id
    #       tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
    #       # Job Name
    #       job-name: 'Test' # Should be same name as declared in 'name' clause of the current Stage
    #       # Github Context
    #       context-github: ${{ toJSON(github) }}
    #       # JUnit xml report file name with path
    #       xml-report-filename: target/surefire-reports/testng-results.xml # if only JUnit tests, use target/surefire-reports/testng-results.xml
    #                                                                       # if both JUnit & TestNG tests, use target/surefire-reports/testng-junit-results/testng-results.xml

  registerArtifact:
    name: 'Register Artifact'
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: ServiceNow DevOps Register Artifact
    # You may pin to the exact commit or the version.          
      uses: ServiceNow/servicenow-devops-register-artifact@v3.1.0
      with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Display Name of the Job
          job-name: 'Register Artifact'
          # Github Context
          context-github: ${{ toJSON(github) }}
          # List of Artifacts to be registered
          artifacts: '[
              {
                  "name": "app-devops-cicd.jar",
                  "version": "1.${{ github.run_number }}",
                  "semanticVersion": "1.${{ github.run_number }}.0",
                  "repositoryName": "${{ github.repository }}"
              }
          ]'

  sonarSummary:
    name: 'SonarCloud Scan Summary'
    needs: registerArtifact
    runs-on: ubuntu-latest
    steps:
    - name: ServiceNow DevOps Sonar Scan Results
    # You may pin to the exact commit or the version.     
      uses: ServiceNow/servicenow-devops-sonar@v3.1.0
      with:
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Github Context
          context-github: ${{ toJSON(github) }}
          # Display Name of the Job
          job-name: 'SonarCloud Scan Summary'
          # Sonar Host URL
          sonar-host-url: ${{ secrets.SONAR_URL }}
          # Sonar Project Key
          sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}

  registerPackage:
    name: 'Register Package'
    needs: [sonarSummary]
    runs-on: ubuntu-latest
    steps:
    - name: ServiceNow DevOps Register Package
    # You may pin to the exact commit or the version.           
      uses: ServiceNow/servicenow-devops-register-package@v3.1.0
      with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id of the tool created in ServiceNow
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Github Context
          context-github: ${{ toJSON(github) }}
          # List of Artifacts in JSON format
          artifacts: '[
              {
                  "name": "app-devops-cicd.jar",
                  "version": "1.${{ github.run_number }}",
                  "semanticVersion": "1.${{ github.run_number }}.0",
                  "repositoryName": "${{ github.repository }}"
              }
          ]'
          # Name of the Package that contains list of artifacts
          package-name: 'app-devops-change-velocity-cicd.war'
          # Display Name of Job
          job-name: 'Register Package'
            
  change:
    # jobs that must complete successfully before this job will run
    needs: registerPackage
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change Automation'
    outputs:
      changeRequestNumber: ${{ steps.create_change.outputs.change-request-number }}
      changeRequestSysId: ${{ steps.create_change.outputs.change-request-sys-id }}
    steps:
      - name: ServiceNow Change
        id: create_change
        uses: ServiceNow/servicenow-devops-change@v4.0.0
        with:
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # GitHub Context
          context-github: ${{ toJSON(github) }}
          # Display Name of the Job
          job-name: 'ServiceNow DevOps Change Automation'
          change-request: '{"setCloseCode": "true","autoCloseChange": true,"attributes": {"short_description": "GitHub - (load-testing)","description": "GitHub Automated Software Deployment.","assignment_group": "1b0a5c60ff8c9610c648fe258c4fd956","assigned_to" :{"name": "Abraham Lincoln"},"work_notes": "Check out this awesome CR","cmdb_ci": "5f5c4854c0a8010e00c202b418f5b73b","implementation_plan": "Software update is tested and results can befound in Test Summaries Tab","backout_plan": "When software fails in production, the previous software release will be re-deployed.","test_plan": "Testing if the software was successfully deployed", "template":"47de5ca8ff8c9610c648fe258c4fd96b"}}'
          #change-request: '{"attributes":{"type":"normal"}}'
          # You can specify the requested_by attribute either with name or sys_id. Example: "requested_by":{"name": "Test User"} or "requested_by": "62826bf03710200044e0bfc8bcbe5df1"
          # You can specify the assignment_group attribute either with name or sys_id. Example: "assignment_group":{"name": "Change Approval Team"} or "assignment_group": "5f721d93c0a8010e015533746de18bf9"
          # start_date: Enter the planned start date
          # end_date: Enter the planned end date
          #deployment-gate: '{"environment":"env_deployment_gates","jobName":"ServiceNow DevOps Get Change"}'
          abortOnChangeCreationFailure: false
          interval: 100
          timeout:
          changeCreationTimeOut:
      - name: Output of ServiceNow DevOps Change Automation
        run: |
          echo 'Output of ServiceNow DevOps Change Automation is change-request-number = ${{ steps.create_change.outputs.change-request-number }}' >> $GITHUB_OUTPUT
          echo 'Output of ServiceNow DevOps Change Automation is change-request-sys-id = ${{ steps.create_change.outputs.change-request-sys-id }}' >> $GITHUB_OUTPUT            

  getChange:
    # jobs that must complete successfully before this job will run
    needs: change
    # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Get Change'
    #environment: env_deployment_gates
    outputs:
      changeRequestNumber: ${{ steps.get_change.outputs.change-request-number }}
    steps:
      - name: ServiceNow DevOps Get Change
        id: get_change
        # You may pin to the exact commit or the version.
        # uses: ServiceNow/servicenow-devops-get-change@38d27ed6413d88e7b7fa9a7db248a2caaaf09596
        uses: ServiceNow/servicenow-devops-get-change@v3.1.0
        with:
          # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          # # Devops Integration User Name
          # devops-integration-user-name: # optional
          # # Devops Integration User Password
          # devops-integration-user-password: ${{ secrets.SN_DEVOPS_TOKEN }}
          # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          # Github Context
          context-github: ${{ toJSON(github) }}
          # The inputs to identify change at Servicenow and GET it.
          #change-details: '{"build_number":"${{ github.run_id }}","pipeline_name":"${{ github.repository }}/${{ github.workflow }}","stage_name":"ServiceNow DevOps Change Automation", "attempt_number": ""}'
          #change-details: '{"build_number":"","pipeline_name":"${{ github.repository }}/${{ github.workflow }}","stage_name":"", "attempt_number": ""}'
          change-details: '{"build_number":"","pipeline_name":"","stage_name":"ServiceNow DevOps Change Automation"}'
      - name: Output of ServiceNow DevOps Get Change
        run: |
          echo 'Output of ServiceNow DevOps Get Change Automation is change-request-number = ${{ steps.get_change.outputs.change-request-number }}' >> $GITHUB_OUTPUT           

  deploy:
    name: 'Deploy'
    needs: getChange
    runs-on: ubuntu-latest
    steps:
    - name: Run deployment scripts
      run: echo 'Deployment step in progress...'
